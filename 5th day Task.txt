Task-1

class Book {
	    private int bookID;
	    private String title;
	    private String author;
	    private boolean isAvailable;
	    public Book(int bookID, String title, String author) {
	        this.bookID = bookID;
	        this.title = title;
	        this.author = author;
	        this.isAvailable = true; 
	    }

	    
	    public int getBookID() {
	        return bookID;
	    }

	    public String getTitle() {
	        return title;
	    }

	    public String getAuthor() {
	        return author;
	    }

	    public boolean isAvailable() {
	        return isAvailable;
	    }
	    public void borrowBook() {
	        isAvailable = false;
	    }
	    public void returnBook() {
	        isAvailable = true;
	    }
	    public void displayBook() {
	        System.out.println("Book ID: " + bookID+"Title: " + title+"Author: " + author+"Available: " + (isAvailable ? "Yes" : "No"));
	       
	    }
	}

import java.util.ArrayList;
class Library {
	    private ArrayList<Book> books;

	    public Library() {
	        this.books = new ArrayList<>();
	    }
	    public void addBook(Book book) {
	        books.add(book);
	    }
	    public void removeBook(int bookID) {
	        for (int i = 0; i < books.size(); i++) {
	            if (books.get(i).getBookID() == bookID) {
	                books.remove(i);
	                System.out.println("Book with ID " + bookID + " removed successfully.");
	                return;
	            }
	        }
	        System.out.println("Book with ID " + bookID + " not found.");
	    }
	    public Book searchBook(int bookID) {
	        for (Book book : books) {
	            if (book.getBookID() == bookID) {
	                return book;
	            }
	        }
	        return null;
	    }

	    public void displayBooks() {
	        if (books.isEmpty()) {
	            System.out.println("Library is empty.");
	        } else {
	            System.out.println("Books in the library:");
	            for (Book book : books) {
	                book.displayBook();
	                System.out.println();
	            }
	        }
	    }
	}



import java.util.Scanner;
public class Main {
	    public static void main(String[] args) {
	        Library library = new Library();
	        Scanner scanner = new Scanner(System.in);

	        while (true) {
	            System.out.println("Library System Menu:");
	            System.out.println("1. Add a Book");
	            System.out.println("2. Remove a Book");
	            System.out.println("3. Search for a Book");
	            System.out.println("4. Display All Books");
	            System.out.println("5. Exit");
	            System.out.print("Enter your choice: ");
	            int choice = scanner.nextInt();
	            scanner.nextLine();

	            switch (choice) {
	                case 1:
	                    System.out.print("Enter Book ID: ");
	                    int bookID = scanner.nextInt();
	                    scanner.nextLine(); 
	                    System.out.print("Enter Title: ");
	                    String title = scanner.nextLine();
	                    System.out.print("Enter Author: ");
	                    String author = scanner.nextLine();
	                    Book newBook = new Book(bookID, title, author);
	                    library.addBook(newBook);
	                    System.out.println("Book added successfully.");
	                    break;
	                case 2:
	                    System.out.print("Enter Book ID to remove: ");
	                    int removeID = scanner.nextInt();
	                    library.removeBook(removeID);
	                    break;
	                case 3:
	                    System.out.print("Enter Book ID to search: ");
	                    int searchID = scanner.nextInt();
	                    Book foundBook = library.searchBook(searchID);
	                    if (foundBook != null) {
	                        System.out.println("Book found:");
	                        foundBook.displayBook();
	                    } else {
	                        System.out.println("Book not found.");
	                    }
	                    break;
	                case 4:
	                    library.displayBooks();
	                    break;
	                case 5:
	                    System.out.println("Exiting...");
	                    System.exit(0);
	                default:
	                    System.out.println("Invalid choice. Please enter a number between 1 and 5.");
	            }
	            System.out.println(); 
	        }
	    }
	}




Task-2

interface Taxable {
	    double salesTax = 0.07; // 7%
	    double incomeTax = 0.105; // 10.5%

	    double calTax();
	}

	class Employee implements Taxable {
	    private int empid;
	    private String name;
	    private double salary;

	    public Employee(int empid, String name, double salary) {
	        this.empid = empid;
	        this.name = name;
	        this.salary = salary;
	    }

	    @Override
	    public double calTax() {
	        return salary * incomeTax;
	    }
	}

	class Product implements Taxable {
	    private int pid;
	    private double price;
	    private int quantity;

	    public Product(int pid, double price, int quantity) {
	        this.pid = pid;
	        this.price = price;
	        this.quantity = quantity;
	    }

	    @Override
	    public double calTax() {
	        return price * salesTax;
	    }
	}


import java.util.Scanner;
	public class  DriveMain {
	    public static void main(String[] args) {
	        Scanner scanner = new Scanner(System.in);

	        System.out.println("Enter employee ID:");
	        int empid = scanner.nextInt();
	        System.out.println("Enter employee name:");
	        String empName = scanner.next();
	        System.out.println("Enter employee salary:");
	        double salary = scanner.nextDouble();
	        Employee employee = new Employee(empid, empName, salary);
	        System.out.println("Enter product ID:");
	        int pid = scanner.nextInt();
	        System.out.println("Enter product price:");
	        double price = scanner.nextDouble();
	        System.out.println("Enter product quantity:");
	        int quantity = scanner.nextInt();
	        Product product = new Product(pid, price, quantity);

	        double incomeTax = employee.calTax();
	        double salesTax = product.calTax();

	        System.out.println("Income tax for employee " + empName + " is: " + incomeTax);
	        System.out.println("Sales tax for product with ID " + pid + " is: " + salesTax);

	        scanner.close();
	    }
	}

